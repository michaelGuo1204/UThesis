library(tidyverse)
library(corrplot)
library(viridis)
library(igraph)
library(aricode)
library(sbm)
library(missSBM)
library(reticulate)
use_python("/home/bili/anaconda3/envs/spektral/bin/python")
np <- import("numpy")
library(reticulate)
use_condaenv("r")
library(corrplot)
library(tidyverse)
library(corrplot)
library(viridis)
library(igraph)
library(aricode)
library(sbm)
library(missSBM)
library(reticulate)
use_condaenv("r")
library(tidyverse)
library(corrplot)
library(viridis)
library(igraph)
library(aricode)
library(sbm)
library(missSBM)
library(reticulate)
use_condaenv("r")
np <- import("numpy")
nnpz1 <- np$load("../GNN/Data/fsaj.npz")
setwd("~/Lernen/UThesis")
nnpz1 <- np$load("../GNN/Data/fsaj.npz")
nnpz1 <- np$load("./GNN/Data/fsaj.npz")
View(nnpz1)
npz1 <- np$load("./GNN/Data/fsaj.npz")
npz1$files
npz1$files
arr <- npz1$$f[["arr_0"]]
npz1$files
arr <- npz1$f[["arr_0"]]
View(arr)
mat <- matrix(arr)
View(mat)
View(arr)
library(Matrix)
arr <- npz1$f[["arr_0"]]
mat <- matrix(arr)
arr <- npz1$f[["arr_0"]]
mat <- matrix(arr,nrow = 200,ncol = 200)
View(mat)
g1 <- graph_from_adjacency_matrix( mat )
blocks <- 1:20
sbm_full <- estimateMissSBM(as_adj(g1), blocks, "node")
plot(sbm_full$bestModel,"meso")
summmary(g1)
summary(g1)
plot(sbm_full)
plot(sbm_full$ICL)
plot(sbm_full$bestModel)
plot(sbm_full$bestModel$show())
plot(sbm_full$bestModel)
sbm_full$bestModel$show()
plot(sbm_full$bestModel)
matx <- matrix(sbm_full$bestModel)
mymodel <- sbm_full$bestModel
net <- mymodel$rNetwork
net <- mymodel$fittedSBM
net
net$expectation
net <- mymodel$fittedSBM
net
rNetwork(net)
net$rNetwork()
net$rNetwork()
g <- graph_from_adjacency_matrix(net$rNetwork())
g <- graph_from_adjacency_matrix(net$rNetwork()$networkData)
print(g)
plot.igraph(g)
mymodel <- sbm_full$bestModel
plot(myModel, "expected")
myModel <- sbm_full$bestModel
plot(myModel, "expected")
plot(myModel, "imputed")
plot(myModel, "meso")
coef(myModel, "sampling")
coef(myModel, "connectivity")
net <- mymodel$fittedSBM
plot(myModel, "expected")
plot(myModel, "imputed")
net <- myModel$fittedSBM$predict()
View(net)
View(net)
net <- myModel$fittedSBM$predict()
g <- graph_from_adjacency_matrix(net)
sbm_full$bestModel$show()
plot.igraph(g)
plot(myModel, "meso")
pi <- matrix(c(.2,1-.2,.2,.2,1-.2,.2,.2,.2,.2,.2, .2,1-.2,.2,.2,1-.2,.2),4,4)
bipar <- igraph::sample_sbm(100, pi, c(15, 35, 5, 45))
View(bipar)
g <- graph_from_adjacency_matrix(net)
sbm_full$bestModel$show()
plot.igraph(g)
View(net)
View(arr)
net[net<0.5]<-1
net <- myModel$fittedSBM$predict()
net[net<0.5]<-0
net[net>0.5]<-1
g <- graph_from_adjacency_matrix(net)
sbm_full$bestModel$show()
plot.igraph(g)
myModel
myModel$fittedSBM
myModel$fittedSBM$rNetwork()
g <- graph_from_adjacency_matrix(myModel$fittedSBM$rNetwork()$networkData)
plot.igraph(g)
myModel$fittedSBM$rMemberships()
g <- graph_from_adjacency_matrix(net)
plot.igraph(g)
net[net<0.2]<-0
net[net>0.8]<-1
g <- graph_from_adjacency_matrix(net)
plot.igraph(g)
net <- myModel$fittedSBM$predict()
net[net<0.1]<-0
net[net>0.9]<-1
g <- graph_from_adjacency_matrix(net)
plot.igraph(g)
net[net>0.8]<-1
g <- graph_from_adjacency_matrix(net)
plot.igraph(g)
net[net>0.5]<-1
net <- myModel$fittedSBM$predict()
net[net<0.5]<-0
net[net>0.5]<-1
g <- graph_from_adjacency_matrix(net)
plot.igraph(g)
member <- myModel$fittedSBM$rMemberships()
View(member)
plot.igraph(g,vertex.color=factor(member))
plot(myModel, "imputed")
coef(myModel, "connectivity")
member <- myModel$fittedSBM$memberships
plot.igraph(g,vertex.color=factor(member))
g_all <- graph_from_adjacency_matrix(net,mode='upper')
plot.igraph(g_all,vertex.color=factor(member))
net <- myModel$fittedSBM$predict()
diag(net)<-0
net[net<0.5]<-0
net[net>0.5]<-1
g_all <- graph_from_adjacency_matrix(net,mode='upper')
plot.igraph(g_all,vertex.color=factor(member))
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper')
connet_net <- coef(myModel, "sampling")
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper')
plot.igraph(g_cluster)
connect_net <- coef(myModel, "sampling")
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper')
plot.igraph(g_cluster)
connect_net <-coef(myModel, "connectivity")
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper')
plot.igraph(g_cluster)
connect_net <-coef(myModel, "connectivity")$mean
connect_net <-coef(myModel, "connectivity")$mean
myModel <- sbm_full$bestModel
member <- myModel$fittedSBM$memberships
plot(myModel, "expected")
plot(myModel, "imputed")
plot(myModel, "meso")
coef(myModel, "sampling")
connect_net <-coef(myModel, "connectivity")$mean
net <- myModel$fittedSBM$predict()
diag(net)<-0
net[net<0.5]<-0
net[net>0.5]<-1
g_all <- graph_from_adjacency_matrix(net,mode='upper')
plot.igraph(g_all,vertex.color=factor(member))
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper')
plot.igraph(g_cluster)
connect_net[connect_net<0.5]<-0
connect_net[connect_net>0.5]<-1
plot.igraph(g_cluster)
connect_net <-coef(myModel, "connectivity")$mean
connect_net[connect_net<0.5]<-0
connect_net[connect_net>0.5]<-1
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper')
plot.igraph(g_cluster)
diag(connect_net)<-0
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper')
plot.igraph(g_cluster)
net <- myModel$fittedSBM$predict()
net <- myModel$fittedSBM$predict()
diag(net)<-0
g_all <- graph_from_adjacency_matrix(net,mode='upper',weighted = TRUE)
plot.igraph(g_all,vertex.color=factor(member))
connect_net <-coef(myModel, "connectivity")$mean
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper',weighted=TRUE)
plot.igraph(g_cluster)
diag(connect_net)<-0
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper',weighted=TRUE)
plot.igraph(g_cluster)
SBM <- myModel$fittedSBM
plot(SBM,type="meso")
plot(SBM,type="data")
SBM <- myModel$fittedSBM
plot(SBM,type="data")
plot(SBM,type="expected")
plot.igraph(g_cluster)
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper',weighted=TRUE)
plot.igraph(g_cluster,width=10)
tkplot(g_cluster)
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'upper max',weighted=TRUE)
tkplot(g_cluster)
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'max',weighted=TRUE)
tkplot(g_cluster)
plot.igraph(g_cluster)
plot(g_cluster,edge.width=g_cluster$weight)
plot.igraph(g_cluster,edge.width=g_cluster$weight)
plot.igraph(g_cluster,edge.width=g_cluster$weight)
plot.igraph(g_cluster,edge.width=E(g_cluster)$Weight)
g_cluster$weight
g_cluster$Weight
E(g_cluste)r$Weight
E(g_cluster)$Weight
E(g_cluster)$weight
plot.igraph(g_cluster,edge.width=E(g_cluster)$weight)
plot.igraph(g_cluster,edge.width=E(g_cluster)$weight*10)
plot.igraph(g_cluster,edge.width=E(g_cluster)$weight*2)
library(tidyverse)
library(corrplot)
library(viridis)
library(igraph)
library(aricode)
library(sbm)
library(missSBM)
library(reticulate)
library(Matrix)
use_condaenv("r")
npz1 <- np$load("./GNN/Data/fsaj.npz")
np<-import('numpy')
npz1 <- np$load("./GNN/Data/fsaj.npz")
npz1$files
arr <- npz1$f[["arr_0"]]
mat_from_file <- matrix(arr,nrow = 200,ncol = 200)
input_graph <- graph_from_adjacency_matrix( mat_from_file )
summary(g1)
blocks <- 1:20
estimation_result <- estimateMissSBM(as_adj(input_graph), blocks, "node")
plot(estimation_result,"monitoring")
plot(estimation_result)
plot(estimation_result)
optimalmodel <- estimation_result$bestModel
membership <- optimalmodel$fittedSBM$memberships
SBM <- optimalmodel$fittedSBM
plot(SBM,type="expected")
plot(optimalmodel, "expected")
plot(optimalmodel, "imputed")
cluster_net <-coef(myModel, "connectivity")$mean
cluster_net <-coef(optimalmodel, "connectivity")$mean
predicted_net <- optimalmodel$fittedSBM$predict()
diag(predicted_net)<-0
g_all <- graph_from_adjacency_matrix(net,mode='max',weighted = TRUE)
plot.igraph(g_all,vertex.color=factor(member),edge.width=E(g_all)$weigh)
g_all <- graph_from_adjacency_matrix(predicted_net,mode='max',weighted = TRUE)
plot.igraph(g_all,vertex.color=factor(member),edge.width=E(g_all)$weigh)
plot.igraph(g_all,vertex.color=factor(membership),edge.width=E(g_all)$weigh)
diag(connect_net)<-0
g_cluster <- graph_from_adjacency_matrix(connect_net,mode = 'max',weighted=TRUE)
diag(cluster_net)<-0
g_cluster <- graph_from_adjacency_matrix(cluster_net,mode = 'max',weighted=TRUE)
plot.igraph(g_cluster,edge.width=E(g_cluster)$weight*2)
membership
